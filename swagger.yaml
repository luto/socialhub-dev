---
# API information
swagger: '2.0'
info:
  title: SocialHub Public API
  description: SocialHub Public API Reference
  version: '1.0'
  contact:
    email: support@socialhub.io
host: api.socialhub.io
basePath: /
externalDocs:
  description: SocialHub for Developers
  url: https://socialhub.dev
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  token:
    type: apiKey
    description: Channel specific JWT Access Token (from the Custom Channel Settings)
    name: accesstoken
    in: query
security:
  - token: []

tags:
  - name: General
    description: SocialHub Platform APIs
  - name: Inbox
    description: SocialHub Inbox Product APIs
  - name: Content Planner
    description: SocialHub Content Planner Product APIs

# API Routes and Operations
paths:
  '/':
    get:
      summary: 'General information route'
      description: 'Returns information related to the used access token. Manifest information will be omitted for Reusable Manifests.'
      tags:
        - General
      responses:
        200:
          description: 'Channel and manifest data'
          schema:
            type: object
            properties:
              channel:
                $ref: '#/definitions/Channel'
              manifest:
                $ref: '#/definitions/Manifest'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        404:
          $ref: '#/responses/NotFoundError'
        500:
          $ref: '#/responses/InternalServerError'

  '/manifest':
    patch:
      summary: "Partially update a Custom Channel's Manifest"
      description: 'A channel may have a manifest which defines a networks capabilities and configures communication with its integration. A Custom Channel will start off with an empty default Manifest which should be adjusted as needed by the Integration. Not available for Manifests that have been promoted to be reusable.'
      tags:
        - General
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Manifest'
      responses:
        200:
          description: 'The updated Manifest object.'
          schema:
            $ref: '#/definitions/Manifest'
        400:
          $ref: '#/responses/BadRequestError'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        422:
          $ref: '#/responses/WebhookValidationError'
        500:
          $ref: '#/responses/InternalServerError'

  '/channel':
    patch:
      summary: "Partially update an existing Custom Channel"
      description: 'Update data of existing Custom Channel. Channel jwt is required.'
      tags:
        - General
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                description: Name of the channel.
                type: string
              uniqueName:
                description: Unique name of the channel. An error will be thrown if another channel with such unique name already exists in account for this integration.
                type: string
              imageUrl:
                description: URL to the channel image.
                type: string
                format: uri
              endpoint:
                type: object
                properties:
                  expirationTime:
                    type: string
                    description: The time when integration will loose access to the network channel. Must be in future.
                    format: date-time
      responses:
        200:
          description: 'The updated Manifest object.'
          schema:
            $ref: '#/definitions/Manifest'
        400:
          $ref: '#/responses/BadRequestError'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        404:
          $ref: '#/responses/NotFoundError'
        500:
          $ref: '#/responses/InternalServerError'

    delete:
      summary: Deativates a channel by its jwt
        tags:
          - General
        responses:
          204:
            description: Empty response in case of success.
          401:
            $ref: '#/responses/AccessTokenInvalidError'
          403:
            $ref: '#/responses/AccessDenied'
          404:
            $ref: '#/responses/NotFoundError'
          500:
            $ref: '#/responses/InternalServerError'

  '/channels':
    post:
      summary: 'Creates a Custom Channel (Reusable Manifests)'
      description: 'Integrations with Manifests that have been promoted to be reusable by other customers can use this route to create Channels using the access token passed to the `channelCreation` callback.'
      tags:
        - General
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Channel'
      responses:
        201:
          description: 'The created Custom Channel object.'
          schema:
            $ref: '#/definitions/Channel'
        400:
          $ref: '#/responses/BadRequestError'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        404:
          $ref: '#/responses/NotFoundError'
        500:
          $ref: '#/responses/InternalServerError'

  '/inbox/tickets':
    post:
      summary: 'Creates a Ticket for Custom Channels'
      description: 'The SocialHub Ticket API allows the cration of Custom Tickets for Custom Channels. A Ticket is an entity managed within the SocialHub Inbox. A Ticket contains the Information about the Interaction (eg. a comment on a Facebook post) it represents.'
      tags:
        - Inbox
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - interaction
            properties:
              interaction:
                type: object
                description: "Contains the Interaction's information as Ticket sub-object."
                properties:
                  root:
                    type: object
                    properties:
                      rootId:
                        type: string
                        pattern: '^[a-zA-Z0-9/_-]{6,256}$'
                        description: "A unique identifier of the parent entity of the current Interaction within a Custom Chanel"
                  message:
                    description: 'Message text of an Interaction (eg. the Text of a Facebook comment). May have up to 10.000 characters. Optional if there are pictures or attachments.'
                    type: string
                    maxLength: 10000
                    default: ''
                    example: 'Hello, can someone help me?'
                  pictures:
                    description: 'List of images of an Interaction (eg. a Facebook post with one or multiple images). Optional if there is a message or attachments.'
                    type: array
                    items:
                      type: object
                      properties:
                        small:
                          description: 'URL of a thumbnail version of the image. URL must support HTTPS protocol.'
                          type: string
                          format: url
                          pattern: '^https:'
                          example: 'https://example.com/questions/q_0000000001/images/1/thumbnail.png'
                        large:
                          description: 'Optional: URL of the original version of the image. If set, URL must support HTTPS protocol.'
                          type: string
                          format: url
                          pattern: '^https:'
                          example: 'https://example.com/questions/q_0000000001/images/1/original.png'
                      required:
                        - small
                  attachments:
                    description: 'List of file attachments of an Interaction (eg. a Direct Message with one or multiple files attached). Optional if there is a message or pictures.'
                    type: array
                    items:
                      type: object
                      required:
                        - url
                      properties:
                        url:
                          description: 'URL to download the attached file.URL must support HTTPS protocol.'
                          type: string
                          format: url
                          pattern: '^https://'
                          example: 'https://example.com/files/invoice.pdf'
                        name:
                          description: 'Optional: Attachment filename.'
                          type: string
                          example: 'invoice.pdf'
                        size:
                          description: 'Optional: Numerical filesize in bytes.'
                          type: number
                          minimum: 0
                          example: 1024
                        mimeType:
                          description: 'Optional: Attachment filetype as mime-type (eg. "application/pdf")'
                          type: string
                          pattern: '^[a-zA-Z]+\\/[a-zA-Z0-9]+((\\.|\\+|\\-)[a-zA-Z0-9]+)*$'
                          example: 'application/pdf'
                  createdTime:
                    description: "Optional: The Interaction's creation time (as ISO 8601). For Facebook this would for example be the date and time when a comment was created. If this field is not specified the current date will be used."
                    type: string
                    format: date-time
                  networkItemId:
                    description: 'A unique identifier of the Interaction within a Custom Channel. A HTTP 409 Conflict will be returned if you attempt to create a Ticket with an identifier that has already been used for another Ticket within the same Channel.'
                    type: string
                    pattern: '^[a-zA-Z0-9/_-]{6,256}$'
                    example: 'question-q_0000000001'
                  url:
                    description: 'Optional: Link to the Interaction. This link will be used by SocialHub Users to eg. allow them to access the Interaction directly on the networks website.'
                    type: string
                    format: url
                    example: 'http://example.com/questions/q_0000000001'
                required:
                  - networkItemId
      responses:
        201:
          description: 'The successfully created Ticket.'
          schema:
            $ref: '#/definitions/Ticket'
        400:
          $ref: '#/responses/BadRequestError'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        409:
          $ref: '#/responses/ConflictError'
        500:
          $ref: '#/responses/InternalServerError'

  '/inbox/tickets/:ticketId/replies/:followupId/success':
    post:
      summary: 'Reply Ticket Action callback route'
      description: 'After receiving the Reply event the Integration should asynchronously attempt to create the Reply on the Network. If the Reply was processed successfully by the Integration, this success callback route should be called.'
      tags:
        - Inbox
      parameters:
        - name: ticketId
          in: path
          description: 'The identifier of the Ticket that a Reply Action was successfully processed for.'
          required: true
          type: string
          pattern: '^[a-f0-9]{24}$'
        - name: followupId
          in: path
          description: 'The identifier of the Reply Followup that was successfully processed.'
          required: true
          type: string
          format: uuid
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - interaction
            properties:
              interaction:
                type: object
                properties:
                  createdTime:
                    description: "Optional: The Reply's creation time (as ISO 8601) on the Network. If this field is not specified the current date will be used."
                    type: string
                    format: date-time
                  networkItemId:
                    description: 'A unique identifier of the Reply within a Custom Channel. A HTTP 409 Conflict will be returned if the identifier has already been used for another Ticket within the same Channel.'
                    type: string
                    pattern: '^[a-zA-Z0-9/_-]{6,256}$'
                    example: 'answer-a_0000000052'
                  url:
                    description: 'Optional: Link to the Interaction.'
                    type: string
                    format: url
                    example: 'http://example.com/questions/q_0000000001/a_0000000052'
                required:
                  - networkItemId
      responses:
        201:
          description: 'The successfully created Reply-Ticket.'
          schema:
            $ref: '#/definitions/Ticket'
        400:
          $ref: '#/responses/BadRequestError'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        409:
          $ref: '#/responses/ConflictError'
        500:
          $ref: '#/responses/InternalServerError'

  '/inbox/tickets/:ticketId/reset/:actionId':
    post:
      summary: 'Ticket Action Error callback route'
      description: 'Ticket Actions are processed asynchronously by the Integration. To handle cases where the Action has failed, for example because the Integration was unable to apply it on the Network, this callback route informs the Community Managers of the failure.'
      tags:
        - Inbox
      parameters:
        - name: ticketId
          in: path
          description: 'The identifier of the Ticket that the Action failed for.'
          required: true
          type: string
          pattern: '^[a-f0-9]{24}$'
        - name: actionId
          in: path
          description: 'The identifier of the Ticket Action that has failed to be processed.'
          required: true
          type: string
          pattern: '^[a-zA-Z0-9-_]{1,256}$'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - interaction
            properties:
              followupId:
                type: string
                format: uuid
                example: 'f5f75b50-6764-11e9-9ce6-3507264c7519'
              reason:
                type: string
                example: 'Failed to create the Reply because the Interaction has been deleted on the Network.'
      responses:
        201:
          description: 'The updated Ticket object.'
          schema:
            $ref: '#/definitions/Ticket'
        400:
          $ref: '#/responses/BadRequestError'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        409:
          $ref: '#/responses/ConflictError'
        500:
          $ref: '#/responses/InternalServerError'

# Reusable data type schema definitions.
definitions:

  ObjectId:
    description: 'Resource identifier string called `ObjectId`.'
    type: string
    pattern: '^[a-f0-9]{24}$'
    example: '5cc1b08ad62ec72e8388cb47'

  Date:
    description: 'ISO 8601 date string'
    type: string
    format: date-time
    example: "2019-01-28T16:58:12.736Z"

  Channel:
    type: object
    description: 'SocialHub Channel Object. A channel entity represents a specific connection between the SocialHub and an external data source (eg. a Facebook page).'
    properties:
      _id:
        $ref: '#/definitions/ObjectId'
      name:
        type: string
        example: 'Custom Channel'
      uniqueName:
        type: string
        example: 'Custom Channel'
      imageUrl:
        type: string
        format: url
        example: 'https://app.socialhub.io/uploads/0000000104.png'
      endpoint:
        type: object
        properties:
          networkId:
            type: string
            description: id of the channel on network
          expirationTime:
            type: string
            format: date-time
            description: the time when integration will loose access to the channel on network, e.g. because of acess token expiration
      createdTime:
        $ref: '#/definitions/Date'
      accountId:
        $ref: '#/definitions/ObjectId'
      businessHours:
        type: object
        properties:
          timezone:
            description: 'Timezone offset of the following business hours'
            type: number
            example: 2
          daysOfWeek:
            type: array
            items:
              type: object
              properties:
                day:
                  description: 'For each day in the week there will be one item, each numbered from day 1 to 7.'
                  type: number
                  minimum: 1
                  maximum: 7
                  example: 1
                start:
                  description: 'Time when the business hours start (0-24h format)'
                  type: number
                  minimum: 0
                  maximum: 24
                  example: 9
                end:
                  description:  'Time when the business hours end (0-24h format)'
                  type: number
                  minimum: 0
                  maximum: 24
                  example: 17
                workday:
                  description: 'Whether this day is a work day or not'
                  type: boolean

  Manifest:
    type: object
    description: 'SocialHub Manifest Object. A channel may have a manifest which defines a networks capabilities and configures communication with its integration'
    properties:
      _id:
        $ref: '#/definitions/ObjectId'
      webhook:
        type: object
        properties:
          url:
            type: string
            format: url
            pattern: '^https://'
            example: 'https://socialhub.example.com/webhook'
          secret:
            type: string
            minLength: 32
            maxLength: 512
            example: 'a_random_secret_string'
      inbox:
        type: object
        properties:
          ticketActions:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                  enum: ['reply', 'template_reply']
                id:
                  type: string
                  example: 'reply-as-comment'
                label:
                  type: string
                  example: 'Reply'
                config:
                  type: object
                  properties:
                    templates:
                      type: object
                      properties:
                        url:
                          type: string
                          format: url
                    timeout:
                      type: object
                      properties:
                        duration:
                          type: string
                          example: '24h'
                        after:
                          type: string
                          enum: ['networkCreationTime']
                      required:
                        - duration
                        - after
      name:
        description: 'Only set for Reusable Manifests'
        type: string
      callbacks:
        type: object
        properties:
          channelCreation:
            description: 'Channel creation callback for Reusable Manifests'
            type: string
            format: url
            pattern: '^https://'
            example: 'https://socialhub.example.com/create'

  Ticket:
    type: object
    description: 'SocialHub Inbox Ticket Object. A Ticket is an entity managed within the SocialHub Inbox. A Ticket contains the Information about the Interaction (eg. a comment on a Facebook post) it represents.'
    properties:
      _id:
        $ref: '#/definitions/ObjectId'
      accountId:
        $ref: '#/definitions/ObjectId'
      channelId:
        $ref: '#/definitions/ObjectId'
      createdTime:
        $ref: '#/definitions/Date'
      updatedTime:
        $ref: '#/definitions/Date'
      followupTo:
        type: object
        properties:
          followupToId:
            $ref: '#/definitions/ObjectId'
      interaction:
        type: object
        properties:
          networkItemId:
            type: string
            example: 'question-q_0000000001'
          createdTime:
            $ref: '#/definitions/Date'
          url:
            type: string
            format: url
            example: 'http://example.com/questions/q_0000000001'
          message:
            type: string
            example: 'Hello, can someone help me?'
          pictures:
            type: array
            items:
              type: object
              properties:
                small:
                  type: string
                  format: url
                  example: 'https://example.com/questions/q_0000000001/images/1/thumbnail.png'
                large:
                  type: string
                  format: url
                  example: 'https://example.com/questions/q_0000000001/images/1/original.png'
          attachments:
            type: array
            items:
              type: object
              properties:
                url:
                  type: string
                  format: url
                  example: 'https://example.com/files/invoice.pdf'
                name:
                  type: string
                  example: 'invoice.pdf'
                size:
                  type: number
                  example: 1024
                mimeType:
                  type: string
                  example: 'application/pdf'

# Reusable API response definitions.
responses:
  BadRequestError: # 400
    description: 'The request was malformed and rejected.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'BadRequestError'
        message:
          type: string
          example: ''
  AccessTokenInvalidError: # 401
    description: 'The specified access token is not or no longer valid.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'AccessTokenInvalidError'
        message:
          type: string
          example: ''
  AccessDenied: # 403
    description: 'The client does not have access to the requested resource.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'AccessDenied'
        message:
          type: string
          example: ''
  InsufficientPermissions: # 403
    description: 'The client does not have the required permissions for the operation.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'InsufficientPermissions'
        message:
          type: string
          example: ''
  NotFoundError: # 404
    description: 'The requested resource could not be found.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'NotFoundError'
        message:
          type: string
          example: ''
  NotAcceptableError: # 406
    description: 'The requested acceptable response cannot be provided.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'NotAcceptableError'
        message:
          type: string
          example: ''
  ConflictError: # 409
    description: 'The request is not valid on this entity.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'ConflictError'
        message:
          type: string
          example: ''
  WebhookValidationError: # 422
    description: 'An error occurred while attempting to validate the WebHook.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'WebhookValidationError'
        message:
          type: string
          example: ''
  InternalServerError: # 500
    description: 'There was an unexpected error.'
    schema:
      type: object
      properties:
        code:
          type: string
          example: 'InternalServerError'
        message:
          type: string
          example: ''
